# 주유소

# 문제
# 어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다.
# 편의상 일직선을 수평 방향으로 두자.
# 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다.
# 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다.
# 도로 길이의 단위는 km를 사용한다.
# 처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다.
# 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다.
# 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다.
# 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다.
# 가격의 단위는 원을 사용한다.
# 각 도시에 있는 주유소의 기름 가격과, 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램을 작성하시오.


# 입력
# 표준 입력으로 다음 정보가 주어진다.
# 첫 번째 줄에는 도시의 개수를 나타내는 정수 N(2 ≤ N ≤ 100,000)이 주어진다.
# 다음 줄에는 인접한 두 도시를 연결하는 도로의 길이가 제일 왼쪽 도로부터 N-1개의 자연수로 주어진다.
# 다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 N개의 자연수로 주어진다.
# 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 1이상 1,000,000,000 이하의 자연수이다.
# 리터당 가격은 1 이상 1,000,000,000 이하의 자연수이다.


# 출력
# 표준 출력으로 제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용을 출력한다.

# TC
# 4
# 2 3 1
# 5 2 4 1


# Idea
# 1. 처음엔 기름을 다음 주유소로 갈 수 있을 만큼 넣는다.
# 2. 다음 주유소의 가격을 비교해서 더 비싸면 더 넣고 아니면 갈아탄다
# 3. EZ

# Code
import sys
sys.stdin = open("../input.txt", "r")

def solve():
    N = int(input())
    distance_arr = list(map(int, input().split()))
    g_stand_arr = list(map(int, input().split()))
    price = distance_arr[0] * g_stand_arr[0]
    now_in = 1
    for i in range(N-1):
        if now_in == N - 1:
            break
        while now_in < N-1 and g_stand_arr[i] <= g_stand_arr[now_in]:
            price += g_stand_arr[i] * distance_arr[now_in]
            now_in += 1
    print(price)

if __name__ == "__main__":
    solve()
